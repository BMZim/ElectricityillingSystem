/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package electricitybillingsystem;
import com.toedter.calendar.JDateChooser;
import java.awt.event.KeyEvent;

import java.text.SimpleDateFormat;

import java.sql.*;
import javax.swing.*;
import java.util.Date;




public class calculate extends javax.swing.JFrame {
    
int positionX = 0, positionY=0;


        
   
    
    public calculate() {
        initComponents();
        
         
         Date.setDate(new Date());
         
         cmonth.add("January");
        cmonth.add("February");
        cmonth.add("March");
        cmonth.add("April");
        cmonth.add("May");
        cmonth.add("June");
        cmonth.add("July");
        cmonth.add("August");
        cmonth.add("September");
        cmonth.add("October");
        cmonth.add("November");
        cmonth.add("December");
         
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        unit = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        back = new javax.swing.JButton();
        meterno = new javax.swing.JTextField();
        check = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        year = new javax.swing.JTextField();
        cmonth = new java.awt.Choice();
        jLabel12 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Date = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 3));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Colonna MT", 1, 36)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Guillendesign-Variations-1-Calculator.24.png"))); // NOI18N
        jLabel1.setText(" Calculate Electricity Bill");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 5, 5, new java.awt.Color(255, 0, 0)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 440, 49));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Meter No: ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 126, -1, 31));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Name:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 172, -1, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Address:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, -1, 24));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Unit Consumed:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 279, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Entry Date:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 331, -1, 36));
        jPanel1.add(unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(223, 271, 175, 34));

        name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 170, 30));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(458, 287, 130, 29));

        address.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 220, 170, 33));

        submit.setBackground(new java.awt.Color(204, 255, 255));
        submit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Tatice-Cristal-Intense-Ok.24.png"))); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        jPanel1.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 500, 120, 35));

        back.setBackground(new java.awt.Color(204, 255, 255));
        back.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Graphicloads-100-Flat-2-Arrow-back.24.png"))); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 500, 100, 35));

        meterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meternoActionPerformed(evt);
            }
        });
        jPanel1.add(meterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 170, 30));

        check.setBackground(new java.awt.Color(204, 255, 255));
        check.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        check.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Google-Noto-Emoji-Smileys-10024-thinking-face.24.png"))); // NOI18N
        check.setText("Check");
        check.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });
        jPanel1.add(check, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 80, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Billing Month:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 100, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Billing Year:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 90, 30));

        year.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearKeyPressed(evt);
            }
        });
        jPanel1.add(year, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, 180, 30));
        jPanel1.add(cmonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, 180, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText(" X");
        jLabel12.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 30, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Thinking Emoji GIF For Whats App Free.gif"))); // NOI18N
        jLabel10.setText("jLabel10");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 320, 280));
        jPanel1.add(Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, 180, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String smeter = meterno.getText();
            String sunit = unit.getText();
            String bmonth = cmonth.getSelectedItem();
            String byear = year.getText();
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = df.format(Date.getDate());
            
            if (smeter.equals("") || sunit.equals("") || 
                        byear.equals("") || sdate.equals("") ) {
                
                JOptionPane.showMessageDialog(null, "All Fields are Required!!");
            }else{
        try{
                    Conn c = new Conn();
    
                    
    String query = "select * from meter_request where meter_no = '"+smeter+"' and status = 'Received'";
    ResultSet rz = c.s.executeQuery(query);
    
    if(rz.next()){
    
    String Query = "select * from bill where meter_no= '"+smeter+"' and billing_month = '"+bmonth+"' and billing_year='"+byear+"'";
    ResultSet rs = c.s.executeQuery(Query);
    
    if(rs.next()){
         String month = rs.getString("billing_month"); 
       String syear = rs.getString("billing_year");  
        
        
        if(month.equals(bmonth) && syear.equals(byear)) {
            JOptionPane.showMessageDialog(null, "This bill is already calculated for "+bmonth+" of "+byear+".");
        } else {
            
            float totalbill = 0;
            float unit_consumed =  Float.parseFloat(sunit);
            
            String query1 = "select * from tax";
            
            ResultSet ra = c.s.executeQuery(query1);
            while(ra.next()) {
                totalbill += unit_consumed * Float.parseFloat(ra.getString("cost_per_unit"));
                totalbill += Float.parseFloat(ra.getString("meter_rent"));
                totalbill += Float.parseFloat(ra.getString("service_charge"));
                totalbill += Float.parseFloat(ra.getString("service_tax"));
                totalbill += Float.parseFloat(ra.getString("vat"));
            }
 
            String query2 = "insert into bill values('"+smeter+"', '"+sdate+"', '"+bmonth+"', '"+byear+"', '"+sunit+"', '"+totalbill+"', 'Not Paid')";
            c.s.executeUpdate(query2);
            JOptionPane.showMessageDialog(null, "Customer Bill Updated Successfully");
        }
    }else{
        float totalbill = 0;
            float unit_consumed =  Float.parseFloat(sunit);
            
            String query1 = "select * from tax";
            
            ResultSet rd = c.s.executeQuery(query1);
            while(rd.next()) {
                totalbill += unit_consumed * Float.parseFloat(rd.getString("cost_per_unit"));
                totalbill += Float.parseFloat(rd.getString("meter_rent"));
                totalbill += Float.parseFloat(rd.getString("service_charge"));
                totalbill += Float.parseFloat(rd.getString("service_tax"));
                totalbill += Float.parseFloat(rd.getString("vat"));
            }
 
            String query2 = "insert into bill values('"+smeter+"', '"+sdate+"', '"+bmonth+"', '"+byear+"', '"+sunit+"', '"+totalbill+"', 'Not Paid')";
            c.s.executeUpdate(query2);
            JOptionPane.showMessageDialog(null, "Customer Bill Updated Successfully");
    }
    }else{
        JOptionPane.showMessageDialog(null, "This Customer Doesn't have any Meter");
    }
    
} catch (Exception e){
    e.printStackTrace();
}
            }
             
    }//GEN-LAST:event_submitActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        
        setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        
     String smeter = meterno.getText();
        try {
            Conn c  = new Conn();
            if(smeter.equals("")){
                
                JOptionPane.showMessageDialog(null, "Please Enter a Meter No!!");
                
            }else{
                String query3 = "select * from customer where meter_no = '"+smeter+"'";
            
            ResultSet rs = c.s.executeQuery(query3);
            
            
            if (rs.next()) {
                
                JOptionPane.showMessageDialog(null, "Meter Number Found!!");
                
                name.setText(rs.getString("name"));
                address.setText(rs.getString("address"));
            
                
            }else{
                JOptionPane.showMessageDialog(null, "Meter Number Not Found!!");
                meterno.setText("");
            }
            }
            
                
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
        
    }//GEN-LAST:event_checkActionPerformed

    private void meternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_meternoActionPerformed

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        int response = JOptionPane.showConfirmDialog(this, "Do You want to Exit the Application?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(response == JOptionPane.YES_OPTION){
          System.exit(0);  
        }else{
            
        }
    }//GEN-LAST:event_jLabel12MouseClicked

    private void yearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            String smeter = meterno.getText();
            String sunit = unit.getText();
            String bmonth = cmonth.getSelectedItem();
            String byear = year.getText();
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = df.format(Date.getDate());
            
            if (smeter.equals("") || sunit.equals("") || 
                        byear.equals("") || sdate.equals("") ) {
                
                JOptionPane.showMessageDialog(null, "All Fields are Required!!");
            }else{
        try{
                    Conn c = new Conn();
    
    String Query = "select * from bill where meter_no= '"+smeter+"' and billing_month = '"+bmonth+"' and billing_year='"+byear+"'";
    ResultSet rs = c.s.executeQuery(Query);
    
    if(rs.next()){
         String month = rs.getString("billing_month"); 
       String syear = rs.getString("billing_year");  
        
        
        if(month.equals(bmonth) && syear.equals(byear)) {
            JOptionPane.showMessageDialog(null, "This bill is already calculated for "+bmonth+" of "+byear+".");
        } else {
            
            float totalbill = 0;
            float unit_consumed =  Float.parseFloat(sunit);
            
            String query1 = "select * from tax";
            
            ResultSet ra = c.s.executeQuery(query1);
            while(ra.next()) {
                totalbill += unit_consumed * Float.parseFloat(ra.getString("cost_per_unit"));
                totalbill += Float.parseFloat(ra.getString("meter_rent"));
                totalbill += Float.parseFloat(ra.getString("service_charge"));
                totalbill += Float.parseFloat(ra.getString("service_tax"));
                totalbill += Float.parseFloat(ra.getString("vat"));
            }
 
            String query2 = "insert into bill values('"+smeter+"', '"+sdate+"', '"+bmonth+"', '"+byear+"', '"+sunit+"', '"+totalbill+"', 'Not Paid')";
            c.s.executeUpdate(query2);
            JOptionPane.showMessageDialog(null, "Customer Bill Updated Successfully");
        }
    }else{
        float totalbill = 0;
            float unit_consumed =  Float.parseFloat(sunit);
            
            String query1 = "select * from tax";
            
            ResultSet rd = c.s.executeQuery(query1);
            while(rd.next()) {
                totalbill += unit_consumed * Float.parseFloat(rd.getString("cost_per_unit"));
                totalbill += Float.parseFloat(rd.getString("meter_rent"));
                totalbill += Float.parseFloat(rd.getString("service_charge"));
                totalbill += Float.parseFloat(rd.getString("service_tax"));
                totalbill += Float.parseFloat(rd.getString("vat"));
            }
 
            String query2 = "insert into bill values('"+smeter+"', '"+sdate+"', '"+bmonth+"', '"+byear+"', '"+sunit+"', '"+totalbill+"', 'Not Paid')";
            c.s.executeUpdate(query2);
            JOptionPane.showMessageDialog(null, "Customer Bill Updated Successfully");
    }
    
} catch (Exception e){
    e.printStackTrace();
}
            }
        }
    }//GEN-LAST:event_yearKeyPressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        positionX = evt.getX();
        positionY = evt.getY();


    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        setLocation(evt.getXOnScreen()-positionX, evt.getYOnScreen()-positionY);
    }//GEN-LAST:event_formMouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser Date;
    private javax.swing.JLabel address;
    private javax.swing.JButton back;
    private javax.swing.JButton check;
    private java.awt.Choice cmonth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField meterno;
    private javax.swing.JLabel name;
    private javax.swing.JButton submit;
    private javax.swing.JTextField unit;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
